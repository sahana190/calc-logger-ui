{"version":3,"sources":["component/Login.js","component/Calculator.js","component/Logger.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","handleLogout","setValue","login","username","value1","value2","calculation","handleUserName","e","text","target","value","handleStart","data","alert","this","style","display","flexDirection","alignItems","fontWeight","flex","marginLeft","fontSize","onClick","color","cursor","Typography","marginBottom","gutterBottom","noValidate","autoComplete","action","TextField","id","label","variant","width","onChange","Button","type","Card","minWidth","marginTop","CardContent","renderLoginView","renderLoggedInView","React","Component","TYPE","Alert","elevation","Calculator","name","onCalcClick","parseInt","Math","sqrt","exp","pow","openSnackBar","sendLog","handleCloseSnackBar","closeSnackBar","onClearClick","state","snackbar","snackbarMessage","open","loading","getData","setState","axios","post","then","res","message","snackBarMessage","Grid","container","spacing","item","xs","md","disabled","getLoading","height","textOverflow","getValue1","getValue2","renderArithmeticButtons","Snackbar","autoHideDuration","onClose","severity","Logger","handleLog","logs","unshift","length","pop","io","on","textAlign","borderTop","paddingTop","map","log","renderLog","padding","border","renderAllLog","App","Container","maxWidth","renderCalculator","renderLogger","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.7a998319.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../style.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nexport default class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  renderLoggedInView() {\r\n    const { login, username } = this.props.data;\r\n    if (!login) return null;\r\n    return (\r\n      <div\r\n        style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}\r\n      >\r\n        <span style={{ fontWeight: \"bold\", flex: 1 }}>\r\n          User name :\r\n          <span style={{ fontWeight: \"normal\", marginLeft: 8, fontSize: 14 }}>\r\n            {username}\r\n          </span>\r\n        </span>\r\n        <span\r\n          onClick={this.handleLogout}\r\n          style={{ fontWeight: \"bold\", color: \"blue\", cursor: \"pointer\" }}\r\n        >\r\n          Logout\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleLogout = () => {\r\n    this.props.setValue({\r\n      login: false,\r\n      username: \"\",\r\n      value1: \"\",\r\n      value2: \"\",\r\n      calculation: \"\",\r\n    });\r\n  };\r\n\r\n  renderLoginView() {\r\n    const { login, username } = this.props.data;\r\n    if (login) return null;\r\n    return (\r\n      <div>\r\n        <Typography\r\n          style={{\r\n            fontSize: 14,\r\n            fontWeight: \"bold\",\r\n            marginBottom: 16,\r\n          }}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          Register your name to access calculator\r\n        </Typography>\r\n        <form noValidate autoComplete=\"off\" action=\"#\">\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"User name\"\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n            value={username}\r\n            onChange={this.handleUserName}\r\n          />\r\n          <br></br>\r\n          <br></br>\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={this.handleStart}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Start\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * handles the user name change value\r\n   * @param {object} e\r\n   */\r\n  handleUserName = (e) => {\r\n    let text = e.target.value;\r\n    this.props.setValue({\r\n      username: text,\r\n    });\r\n  };\r\n\r\n  handleStart = () => {\r\n    let { username } = this.props.data;\r\n    if (!username) {\r\n      alert(\"Enter valid user name\");\r\n      return;\r\n    }\r\n    this.props.setValue({\r\n      login: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card\r\n          style={{\r\n            minWidth: 275,\r\n            marginTop: 32,\r\n          }}\r\n        >\r\n          <CardContent>\r\n            {this.renderLoginView()}\r\n            {this.renderLoggedInView()}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../style.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TextField, Button, Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\n\r\nconst TYPE = {\r\n  MULTI: \"MULTI\",\r\n  MINUS: \"MINUS\",\r\n  ADD: \"ADD\",\r\n  DIV: \"DIV\",\r\n  SQRT: \"SQRT\",\r\n  EXPO: \"EXPO\",\r\n  POW: \"POW\",\r\n};\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default class Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      snackbar: false,\r\n      snackbarMessage: \"\",\r\n      open: false,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  getData() {\r\n    let { data } = this.props;\r\n    return data;\r\n  }\r\n\r\n  getValue1() {\r\n    let data = this.getData();\r\n    return data.value1;\r\n  }\r\n\r\n  getValue2() {\r\n    let data = this.getData();\r\n    return data.value2;\r\n  }\r\n\r\n  onChange = (name, e) => {\r\n    let { setValue } = this.props;\r\n    setValue({\r\n      [name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onCalcClick = (type) => {\r\n    let {\r\n      setValue,\r\n      data: { value1, value2, username },\r\n    } = this.props;\r\n    let calculation = \"\";\r\n    let value = 0;\r\n\r\n    value1 = parseInt(value1);\r\n    value2 = parseInt(value2);\r\n\r\n    switch (type) {\r\n      case TYPE.ADD:\r\n        value = value1 + value2;\r\n        calculation = `${value1} + ${value2} = ${value}`;\r\n        break;\r\n      case TYPE.MULTI:\r\n        value = value1 * value2;\r\n        calculation = `${value1} * ${value2} = ${value}`;\r\n        break;\r\n      case TYPE.DIV:\r\n        value = value1 / value2;\r\n        calculation = `${value1} / ${value2} = ${value}`;\r\n        break;\r\n      case TYPE.MINUS:\r\n        value = value1 - value2;\r\n        calculation = `${value1} - ${value2} = ${value}`;\r\n        break;\r\n      case TYPE.SQRT:\r\n        value1 = value1 ? Math.sqrt(value1) : \"\";\r\n        value2 = value2 ? Math.sqrt(value2) : \"\";\r\n        value = true;\r\n        calculation = `Square root = ${value1} : ${value2}`;\r\n        break;\r\n      case TYPE.EXPO:\r\n        value1 = value1 ? Math.exp(value1) : \"\";\r\n        value2 = value2 ? Math.exp(value2) : \"\";\r\n        value = true;\r\n        calculation = `Exponential = ${value1} : ${value2}`;\r\n        break;\r\n      case TYPE.POW:\r\n        value = value1 && value2 ? Math.pow(value1,value2) : '';\r\n        calculation = `${value1} ^ ${value2} = ${value}`;\r\n        break;\r\n    }\r\n\r\n    if (!value) {\r\n      this.openSnackBar(\"Please try with valid inputs!\");\r\n      return;\r\n    }\r\n    setValue({\r\n      calculation,\r\n    });\r\n    this.openSnackBar(calculation);\r\n    this.sendLog(username, calculation);\r\n  };\r\n\r\n  sendLog(username, calculation) {\r\n    let data = {\r\n      username,\r\n      calculation,\r\n    };\r\n    this.setState({ loading: true });\r\n    axios.post(\"https://calc-logger.herokuapp.com/send\", data).then((res) => {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n      this.props.setValue({\r\n        value1: \"\",\r\n        value2: \"\",\r\n      });\r\n    });\r\n  }\r\n\r\n  openSnackBar(message) {\r\n    this.setState({\r\n      open: true,\r\n      snackbarMessage: message,\r\n    });\r\n  }\r\n\r\n  closeSnackBar() {\r\n    this.setState({\r\n      open: false,\r\n      snackBarMessage: \"\",\r\n    });\r\n  }\r\n\r\n  handleCloseSnackBar = () => {\r\n    this.closeSnackBar();\r\n  };\r\n\r\n  onClearClick = () => {\r\n    this.props.setValue({\r\n      calculation: \"\",\r\n      value1: \"\",\r\n      value2: \"\",\r\n    });\r\n  };\r\n\r\n  getLoading() {\r\n    let { loading } = this.state;\r\n    return loading;\r\n  }\r\n\r\n  renderArithmeticButtons() {\r\n    return (\r\n      <Grid container spacing={1} style={{ marginTop: 16 }}>\r\n        <Grid item xs={4} md={2}>\r\n          <Button\r\n            disabled={this.getLoading()}\r\n            onClick={() => {\r\n              this.onCalcClick(TYPE.ADD);\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <span style={{ fontSize: 24 }}>+</span>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={4} md={2}>\r\n          <Button\r\n            disabled={this.getLoading()}\r\n            onClick={() => {\r\n              this.onCalcClick(TYPE.MINUS);\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <span style={{ fontSize: 24 }}>-</span>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={4} md={2}>\r\n          <Button\r\n            disabled={this.getLoading()}\r\n            onClick={() => {\r\n              this.onCalcClick(TYPE.MULTI);\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <span style={{ fontSize: 24 }}>*</span>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={4} md={2}>\r\n          <Button\r\n            disabled={this.getLoading()}\r\n            onClick={() => {\r\n              this.onCalcClick(TYPE.DIV);\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <span style={{ fontSize: 24 }}>/</span>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={8} md={2}>\r\n          <Button\r\n            disabled={this.getLoading()}\r\n            onClick={() => {\r\n              this.onCalcClick(TYPE.SQRT);\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ width: \"100%\", height: 52 }}\r\n          >\r\n            Square root\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={8} md={2}>\r\n          <Button\r\n            disabled={this.getLoading()}\r\n            onClick={() => {\r\n              this.onCalcClick(TYPE.EXPO);\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ width: \"100%\", height: 52 }}\r\n          >\r\n            <span style={{ textOverflow: \"ellipsis\" }}>Exponential</span>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={4} md={2}>\r\n          <Button\r\n            disabled={this.getLoading()}\r\n            onClick={() => {\r\n              this.onCalcClick(TYPE.POW);\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ width: \"100%\", height: 52 }}\r\n          >\r\n            <span style={{ textOverflow: \"ellipsis\" }}>POWER</span>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} md={2}>\r\n          <Button\r\n            disabled={this.getLoading()}\r\n            onClick={() => {\r\n              this.onClearClick();\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ width: \"100%\", height: 52 }}\r\n          >\r\n            <span style={{ fontSize: 14 }}>Clear</span>\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card\r\n          style={{\r\n            minWidth: 275,\r\n            marginTop: 16,\r\n          }}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              style={{\r\n                fontSize: 14,\r\n                fontWeight: \"bold\",\r\n              }}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            >\r\n              Make your calculations\r\n            </Typography>\r\n            <br></br>\r\n            <form noValidate autoComplete=\"off\">\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Value 1\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    type=\"number\"\r\n                    value={this.getValue1()}\r\n                    onChange={(e) => this.onChange(\"value1\", e)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Value 2\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"100%\" }}\r\n                    type=\"number\"\r\n                    value={this.getValue2()}\r\n                    onChange={(e) => this.onChange(\"value2\", e)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n            {/* Render Arithmetic content */}\r\n            {this.renderArithmeticButtons()}\r\n          </CardContent>\r\n        </Card>\r\n        <Snackbar open={this.state.open} autoHideDuration={6000}>\r\n          <Alert onClose={() => this.handleCloseSnackBar()} severity=\"info\">\r\n            {this.state.snackbarMessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../style.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport io from 'socket.io-client';\r\n\r\nexport default class Logger extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        logs : []\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    const socket = io('https://calc-logger.herokuapp.com/');\r\n    socket.on('log',this.handleLog);\r\n  }\r\n\r\n  handleLog = (res) => {\r\n    let {logs} = this.state;\r\n    logs.unshift(res);\r\n    if(logs.length > 10){\r\n        logs.pop();\r\n    }\r\n    this.setState({logs});\r\n  }\r\n\r\n  renderAllLog(){\r\n    let {logs} = this.state;\r\n    if(logs.length === 0) return (\r\n        <div style = {{color : \"gray\",textAlign:\"center\",borderTop:\"1px solid #e8e7e7\",paddingTop : 8}}>\r\n            NO LOGS\r\n        </div>\r\n    )\r\n    return logs.map((log) => {\r\n        return this.renderLog(log);\r\n    });\r\n  }\r\n\r\n  renderLog(res){\r\n      const {username,calculation} = res;\r\n      return (\r\n          <div style = {{display:\"flex\",flex:1,marginTop:8,flexDirection : \"column\",padding:8,border:\"1px solid gainsboro\"}}>\r\n              <span style = {{fontSize : 14,fontWeight : \"bold\"}}>{username}</span>\r\n              <div style = {{borderTop : \"1px solid #ecebeb\",marginTop : 8}}>\r\n                Calculation : {calculation}\r\n              </div>\r\n          </div>\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card\r\n          style={{\r\n            minWidth: 275,\r\n            marginTop: 16,\r\n            marginBottom : 32\r\n          }}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              style={{\r\n                fontSize: 14,\r\n                fontWeight : \"bold\",\r\n                marginBottom : 16\r\n              }}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            >\r\n              Calculations Logs\r\n            </Typography>\r\n            {this.renderAllLog()}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\nimport \"./style.css\";\nimport { Container } from \"@material-ui/core\";\nimport Login from \"./component/Login\";\nimport Calculator from \"./component/Calculator\";\nimport Logger from \"./component/Logger\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: false,\n      username : '',\n      value1 : '',\n      value2 : '',\n      calculation : ''\n    };\n  }\n\n  setValue = (data) => {\n    this.setState(data);\n  }\n\n  renderCalculator(){\n    let {login} = this.state;\n    if(!login) return null;\n    return (\n      <Calculator data = {this.state} setValue = {this.setValue}/>\n    )\n  }\n\n  renderLogger(){\n    let {login} = this.state;\n    if(!login) return null;\n    return (\n      <Logger data = {this.state} setValue = {this.setValue}/>\n    )\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Container maxWidth=\"md\">\n          <Login data = {this.state} setValue = {this.setValue}/>\n          {this.renderCalculator()}\n          {this.renderLogger()}\n        </Container>\n      </Fragment>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}